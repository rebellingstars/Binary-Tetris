#include<stdio.h>
#include<stdlib.h>
#include<time.h>
//structure
struct game
{
    char name[20];
    int score;
}g;
//function declarations
//main function
int main()
{
    srand(time(0));
    //declaring variables
    int a[9][9];
    int i,j;
    int c,x,y;
    //initializing table
    for(i=0;i<9;i++)
    {
        for(j=0;j<9;j++)
        {
            a[i][j]=1;
        }
    }
    //start screen
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n\n\n");
    printf("\t\t\t\t1111111  1111111  1     1   11111   1111111  1     1\n");
    printf("\t\t\t\t1     1     1     11    1  1     1  1     1   1   1 \n");
    printf("\t\t\t\t1     1     1     1 1   1  1     1  1     1    1 1  \n");
    printf("\t\t\t\t111111      1     1  1  1  1111111  1111111     1   \n");
    printf("\t\t\t\t1     1     1     1   1 1  1     1  1   1       1   \n");
    printf("\t\t\t\t1     1     1     1    11  1     1  1    1      1   \n");
    printf("\t\t\t\t1111111  1111111  1     1  1     1  1     1     1   \n");
    printf("\n\n");
    printf("\t\t\t\t0000000  0000000  0000000  0000000  0000000  0000000\n");
    printf("\t\t\t\t   0     0           0     0     0     0     0      \n");
    printf("\t\t\t\t   0     0           0     0     0     0     0      \n");
    printf("\t\t\t\t   0     00000       0     0000000     0     0000000\n");
    printf("\t\t\t\t   0     0           0     0   0       0           0\n");
    printf("\t\t\t\t   0     0           0     0    0      0           0\n");
    printf("\t\t\t\t   0     0000000     0     0     0  0000000  0000000\n\n\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n\n");
    printf("\t\t\tEnter name:");
    scanf("%[^/s]",g.name);
    g.score=0;
    while(g.score>=0)
    {
        //printing block
        printf("\n\n\t\tSCORE:%d\n",g.score);
        printf("\t\t  0   1   2   3   4   5   6   7   8\n");
        printf("\t\t  -------------------------------------\n");
        for(i=0;i<9;i++)
        {
            printf("\t\t%d|",i);
            for(j=0;j<9;j++)
            {
                printf("%d   ",a[i][j]);
            }
            printf("|\n\n");
        }
        printf("\t\t  ------------------------------------\n");

        //changing block
        c=(rand()+1)%(2+1);
        switch(c)
        {
            case 1:
                printf("\t\tBLOCK:  00\n");
                printf("\t\t        00\n");
                printf("Enter row position:");
                scanf("%d",&x);
                printf("Enter column position:");
                scanf("%d",&y);
                a[x][y]=0;
                a[x+1][y]=0;
                a[x][y+1]=0;
                a[x+1][y+1]=0;
                break;
            case 2:
                printf("BLOCK:\n");
                printf("000\n0\n");
                printf("Enter row:");
                scanf("%d",&x);
                printf("Enter column position:");
                scanf("%d",&y);
                a[x][y]=0;
                a[x][y+1]=0;
                a[x][y+2]=0;
                a[x+1][y]=0;
                break;
            default:
                printf("invalid");
      }
    }
    return 0;
}

//functions
/*void start()
{
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n\n\n");
    printf("\t\t\t\t1111111  1111111  1     1   11111   1111111  1     1\n");
    printf("\t\t\t\t1     1     1     11    1  1     1  1     1   1   1 \n");
    printf("\t\t\t\t1     1     1     1 1   1  1     1  1     1    1 1  \n");
    printf("\t\t\t\t111111      1     1  1  1  1111111  1111111     1   \n");
    printf("\t\t\t\t1     1     1     1   1 1  1     1  1   1       1   \n");
    printf("\t\t\t\t1     1     1     1    11  1     1  1    1      1   \n");
    printf("\t\t\t\t1111111  1111111  1     1  1     1  1     1     1   \n");
    printf("\n\n");
    printf("\t\t\t\t0000000  0000000  0000000  0000000  0000000  0000000\n");
    printf("\t\t\t\t   0     0           0     0     0     0     0      \n");
    printf("\t\t\t\t   0     0           0     0     0     0     0      \n");
    printf("\t\t\t\t   0     00000       0     0000000     0     0000000\n");
    printf("\t\t\t\t   0     0           0     0   0       0           0\n");
    printf("\t\t\t\t   0     0           0     0    0      0           0\n");
    printf("\t\t\t\t   0     0000000     0     0     0  0000000  0000000\n\n\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n");
    printf("***********************************************************************************************************************\n\n");

}
*/
/*void array(int a[9][9])
{
    int i,j;
    printf("\n\n\t\tSCORE:%d\n",g.score);
    printf("\t\t  0   1   2   3   4   5   6   7   8\n");
    printf("\t\t  -------------------------------------\n");
    for(i=0;i<9;i++)
    {
        printf("\t\t%d|",i);
        for(j=0;j<9;j++)
        {
            printf("%d   ",a[i][j]);
        }
        printf("|\n\n");
    }
    printf("\t\t  ------------------------------------\n");
}

void blocks(int a[9][9])
{
    int c,x,y;
    c=(rand()+1)%(2+1);
    switch(c)
    {
        case 1:
            printf("\t\tBLOCK:  00\n");
            printf("\t\t        00\n");
            printf("Enter row position:");
            scanf("%d",&x);
            printf("Enter column position:");
            scanf("%d",&y);
            a[x][y]=0;
            a[x+1][y]=0;
            a[x][y+1]=0;
            a[x+1][y+1]=0;
            break;
        case 2:
            printf("BLOCK:\n");
            printf("000\n0\n");
            printf("Enter row:");
            scanf("%d",&x);
            printf("Enter column position:");
            scanf("%d",&y);
            a[x][y]=0;
            a[x][y+1]=0;
            a[x][y+2]=0;
            a[x+1][y]=0;
            break;
        default:
            printf("invalid");
    }
}
*/
